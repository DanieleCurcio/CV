/**
 * Parser für das Projekt Rechner
 * Version 0.3
 *
 * Datum: 25.07.2019 Letzte Anpassung 09.08.2019
 * @author Daniele Curcio
 **/

package rechner;

/* Kontrolliert den erhaltenen String Array und gibt True oder False zurück sollte es keine korrekte Rechnung sein.
 */

public class Parser {
	
	int      lexerZaehler   = 0;
	int      klammerZaehler = 0;
	String[] rechnung;
	
	boolean parser(String[] eingabe) {
		rechnung       = new String[eingabe.length];
		rechnung       = eingabe;
		if (rechnung.length == 1 && zahl(rechnung[lexerZaehler])) {
			return true;
		}
		if(!rechnungsbeginn()) {
			return false;
		} else {
			lexerZaehler++;
		}
		while (lexerZaehler < rechnung.length) {
			if (lexerZaehler < rechnung.length - 1) {
				if (!korrektheit()) {
					return false;
				}
			} else {
				if (!rechnungsende()) {
					return false;
				}
			}
			lexerZaehler++;
		}
		if (klammerZaehler != 0) {
			return false;
		}
		return true;
	}

	private boolean korrektheit() {
		if (operator(rechnung[lexerZaehler])) {
			if (operatorPlus()) {
				return true;
			}
		} else if (zahl(rechnung[lexerZaehler])) {
			if (zahlPlus()) {
				return true;
			}
		} else if (rechnung[lexerZaehler].equals(")")) {
			klammerZaehler--;
			if(klammerZuPlus()) {
				return true;
			}
		} else if (rechnung[lexerZaehler].equals("(")) {
			klammerZaehler++;
			if(klammerOffenPlus()) {
				return true;
			}
		}
		return false;
	}

	private boolean operatorPlus() {
		return (rechnung[lexerZaehler + 1].equals("(") ||
		        zahl(rechnung[lexerZaehler + 1]));
	}
	
	private boolean zahlPlus() {
		return (rechnung[lexerZaehler + 1].equals("(") ||
		        rechnung[lexerZaehler + 1].equals(")") ||
		        operator(rechnung[lexerZaehler + 1]));
	}
	
	private boolean klammerZuPlus() {
		return (operator(rechnung[lexerZaehler + 1]) || 
		        rechnung[lexerZaehler + 1].equals("(") || 
		        rechnung[lexerZaehler + 1].equals(")"));
	}
	
	private boolean klammerOffenPlus() {
		return (zahl(rechnung[lexerZaehler + 1]) || 
		        rechnung[lexerZaehler + 1].equals("("));
	}

	private boolean rechnungsbeginn() {
		if (rechnung[lexerZaehler].equals("(")) {
			klammerZaehler++;
			if(klammerOffenPlus()) {
				return true;
			}
		} else if (zahl(rechnung[lexerZaehler])) {
			if (zahlPlus()) {
				return true;
			}
		} 
		return false;
	}
	
	private boolean rechnungsende() {
		if (rechnung[lexerZaehler].equals(")")) {
			klammerZaehler--;
			return true;
		} else if (zahl(rechnung[lexerZaehler])) {
			return true;
		} 
		return false;
	}
	
	private static boolean operator(String test) {
		return (test.equals("+") ||
		        test.equals("-") ||	
		        test.equals("*") ||
		        test.equals("/"));
	}
	
	private static boolean zahl(String zahl) {
			return (zahl.matches("[-0-9.]+"));
	}
}
